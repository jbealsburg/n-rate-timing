---
title: "N-rate Timing"
date: "`r Sys.Date()`"
# format: pdf
# format: revealjs
# format:
#   docx:
#     reference-doc: word_style.docx
editor: visual
execute: 
  echo: false
  message: false
  warning: false
editor_options: 
  chunk_output_type: console
---

# To do

Distill brainstorming done in the EDA scripts, report.Rmd and Dominics word doc into a singular first draft.

# Data

```{r setup}
library(dplyr)
library(tidyverse)
library(multcomp)
library(emmeans)
library(lme4)
library(car)
theme_set(theme_bw())

read.csv(
  "data_nrate-all.csv"
) %>% 
  as_tibble() %>% 
  mutate(stand.age = ordered(stand.age)) %>% 
  mutate(
    across(
      c(block,location, id),
      factor
    )
  ) %>% 
  mutate(timing = gsub("[0-9]","",treatment),
         timing = str_to_title(timing),  
          timing = str_trim(timing)) %>%
  mutate(timing = fct_recode(timing,
                             "Fall-Spring Split" = "Split")) %>% 
  mutate(n.total = fall+spring+summer) %>%
  # we assume no lodging unless noted
  mutate(lodging = replace_na(lodging,0)) %>% 
  # averaging across height data for now to make things easier
  mutate(height = (height_1+height_2+height_3+height_4+height_5)/5,
         .after=height_5) %>% 
  dplyr::select(-c(height_1,height_2,height_3,height_4,height_5)) -> dat

```

```{r print datasets, include=F}
dat %>% 
  slice(1:6) %>% 
  knitr::kable(
    caption = "first 5 lines of dataset"
  )

read.csv(
  "metadata_nrate-all.csv"
) %>% 
  knitr::kable(
    capation= "metadata"
  )
```

# Methods

```{r, include=F}
read.csv(
  "field_activities.csv"
) %>% 
  knitr::kable(
    caption = "Dates of key field activities"
  )
```

```{r}
dat %>% 
  group_by(n.total,timing,stand.age,location) %>% 
  tally() %>% 
  # print(n=120)
  knitr::kable(
    caption = "The n-rate timing dataset"
  )
```

This is an unbalanced dataset because design was not consistent across sites. One solution is to analyze each site separately, but first we try to see if there is a consistent response across site-years.

```{r}
dat %>% 
  group_by(location,year) %>% 
  tally() %>% 
  knitr::kable(
    caption = "we have 10 site-years, more than enough to be a random effect"
  )
```


# Lodging

Understanding lodging is not a primary objective of this experiment, this data was only collected as a covariate if there happened to be a lot of lodging.

In general, if lodging is above 6, the yield data is questionable.

```{r}
dat %>% 
  ggplot(aes(lodging)) +
  stat_bin() + 
  facet_wrap(~location)
```

Only R100 and V17 showed lodging, and only R100 had severe lodging to the point where the yield data probably is not very accurate.

## R100

R100 only had N applied in the second and third year.

```{r}
dat %>% 
  filter(location == "R100") %>% 
  ggplot(aes(stand.age,lodging)) +
  geom_boxplot()
```

Lodging only occurred in the stands third year of production.

```{r}
dat %>% 
  filter(location == "R100") %>% 
  ggplot(aes(fall+spring+summer,lodging)) +
  geom_point() +
  stat_smooth(
    method = "lm",
    formula = y~log(x+1),
    se=F
  )
```

We observe a general increase in lodging as nitrogen rate increases. We fit a logistic curve since lodging cannot be greater than 10 and we expect as we increase N rate more lodging will get closer to 10. This curve is obviously not perfect.

```{r}
dat %>% 
  filter(location == "R100" & stand.age =="3") %>% 
  ggplot(aes(fall+spring+summer,lodging, col = timing)) +
  geom_point()
```

Looking at treatment timing with N rate, I see a bit more red dots (fall) with lower lodging, but it's messy. Sprint split has some of the most lodging, but also an outlier at near 150 kg N ha where there was no lodging

```{r}
dat %>% 
  filter(location == "R100" & stand.age =="3") %>% 
  ggplot(aes(fall+spring+summer,lodging, col = timing)) +
  stat_summary() +
  stat_smooth(
    se=F,
    method = "lm",
    formula = y~log(x+1)+0
  ) +
  labs(
    caption = "fall split line is hidden underneath spring split"
  )
```

Here we are fitting a logistic regression with a y intercept of zero because we assume at 0N there is no lodging (as shown with control plots) and that lodging score will increase as nitrogen rate increases but that lodging will never exceed 10. The takeaway from this figure is that there is no lodging at 0N and that you see less lodging when you apply in fall and more when you apply in spring and summer.

```{r}
dat %>% 
  filter(location == "R100" &
           stand.age == "3") %>% 
  pivot_longer(
    cols = c(fall,spring,summer),
    values_to = "n.rate",
    names_to = "n.timing"
  ) %>% 
  # glimpse() #lodging is now repeated 3 times
  ggplot(aes(x=n.rate,lodging,
             group = n.timing,
             col = n.timing)) +
  stat_summary() +
  stat_smooth(
    se=F,
    method = "lm"
  )
```

This is a funkier way to look at this data based on how I organized the data and it is confusing so may not be worth trying to interpret.. Every lodging observation has a corresponding amount of N applied in fall, spring and summer. All of the spring plots, for example, also are plots where no N was applied in the fall. So within each of the timings (fall, spring or summer), the entire lodging dataset is represented. This also means the lodging dataset is duplicated 3 times when we do this. I am not sure if this is ok, but this is how I think this can be interpreted.

With more N there is more lodging, but we also see more lodging when the N is applied closer to harvest.

| Timing of N | m (lodging \~ m\*nrate + b) |
|-------------|-----------------------------|
| fall        | -0.002                      |
| spring      | 0.025                       |
| summer      | 0.041                       |

: Linear regression parameters for lodging response to nitrogen timing

```{r, eval=F}
dat %>% 
  filter(location == "R100" &
           stand.age == "3") %>% 
  pivot_longer(
    cols = c(fall,spring,summer),
    values_to = "n.rate",
    names_to = "n.timing"
  ) %>% 
  # filter(
  #   n.timing=="fall"
  #   # n.timing == "spring"
  #   # n.timing == "summer"
  # ) %>% 
  lm(
    lodging~n.rate,.
  )
```

### Analysis

When we fit logistic curves, it looked like the lodging was lowest in the control and fall plots. Let's see if this is true.

```{r}
dat %>% 
  filter(location == "R100" & stand.age =="3") %>% 
  lm(
    formula = lodging~log(n.total+1)*timing+0,.
  )  %>% 
  anova()
```

We cannot reject Ho that timing has an impact on lodging.

```{r}

dat %>% 
  filter(location == "R100" & stand.age =="3") %>% 
  lm(
    formula = lodging~timing,.
  )  %>% 
  # anova() %>% 
  emmeans::emmeans(~timing) %>% 
  cld()
```

Obviously, if we look just at timing then the control plots have less lodging than the rest of the plots receiving N. Takeaway here is that lodging is correlated with increases in N, but we cannot reject the Ho that timing does not have an impact. It looks like fall applied N had less impact on lodging, but we cannot reject Ho.

Based on analysis, we are better off just fitting a general curve to lodging by nrate, we will need to do more analysis to find the best curve with the most fitting relationship.

## V17

Lodging is below threshold of 6, meaning we think this yield data is still good.

We are just looking to see if similar trends to R100 where applying more N leads to more lodging and where applying N closer to harvest correlates with more lodging

```{r}
dat %>% 
  filter(location == "V17") %>% 
  ggplot(aes(stand.age,lodging)) +
  geom_boxplot()
```

Lodging only occurred in the stands second year of production. This could've just been a harvest timing issue, but harvest was 3Aug so unlikely.

```{r}
dat %>% 
  filter(location == "V17" & stand.age == "2") %>% 
  ggplot(aes(fall+spring+summer,lodging)) +
  geom_point() +
  stat_smooth(
    method = "lm",
    se=F
  )
```

Not a strong relationship between N rate and lodging. There is a good amount of lodging in control. Nothing to see here.

```{r}
dat %>% 
  filter(location == "V17" & stand.age == "2") %>% 
  ggplot(aes(fall+spring+summer,lodging, col = timing)) +
  geom_point()
```

# Plant height

Plant height is also not a measurement of primary interest.

We are curious to what extent plant height relates to lodging in R100

We are curious more broadly how plant height was distributed across experiments.

## R100 year 3

```{r}
dat %>% 
  filter(location == "R100" & stand.age =="3") %>% 
  ggplot(aes(fall+spring+summer,height)) +
  geom_point() +
  geom_smooth(
    se=F,
    method = "lm",
    formula = y~poly(x,2)
  )
```

We observe an overall trend of decreasing plant height as N rate increases.

```{r}
dat %>% 
  filter(location == "R100" & stand.age =="3") %>% 
  lm(
    height~n.total+timing,.
  ) %>% 
  anova()

```

Cannot reject Ho that timing has no effect on the effect of n rate on plant height

```{r}
dat %>% 
  filter(location == "R100" & stand.age =="3") %>% 
  ggplot(aes(fall+spring+summer,height, col = timing)) +
  geom_point()

```

We have learned from R100 in it's third stand age that as nrate increases, there is an increase in lodging and a decrease in plant height.

Let's see if they're correlated

```{r}

dat %>% 
  filter(location == "R100" & stand.age =="3") %>%
  dplyr::select(lodging,height) %>% 
  cor(method = "pearson") 
```

We observe a pearson correlation coefficient of -0.5 between height and lodging. This is considered between a moderate and strong correlation.

## V17

We only have height data for V17 in stand ages 2 and 3 besides the R100 in stand age 3.

```{r}
dat %>% 
  ggplot(aes(height)) +
  stat_bin() +
  facet_wrap(~location)
```

alright, we only have two sites with plant height data

```{r}
dat %>% 
  filter(location != "R100") %>% 
  # View()
  lm(height~n.total,.) %>% 
  anova()
```

We cannot reject Ho that plant height is the same across n rates

# Yield

## cumulative

Cumulative yield of kernza stands after 3 years of N fertilizer. Only V17 and Staples meet this criteria. One advantage of this is that we do not have to look at stand.age since we are looking across all three years. 

```{r}
dat %>% 
  # Removing R100 plots in third year because lodging was so high
  filter(location != "R100" | stand.age != "3") %>% 
  filter(stand.age=="3") %>% 
  ggplot(aes(yield.cum)) +
  stat_bin()
```

### quadratic model

```{r}
dat %>% 
  filter(location != "R100" | stand.age != "3") %>% 
  filter(stand.age=="3") %>% 
  ggplot(aes(cumn,yield.cum)) +
  geom_point() +
  geom_smooth(
    se=F,
    method = "lm",
    formula = y~y
  ) +
  geom_smooth(
    se=F,
    method = "lm",
    formula = y~poly(x,2),
    linetype=3
  ) 

dat %>% 
  filter(location != "R100" | stand.age != "3") %>% 
  filter(stand.age=="3") %>% 
  lm(
    yield.cum ~ poly(cumn,2),.
  ) %>% 
  AIC()

dat %>% 
  filter(location != "R100" | stand.age != "3") %>% 
  filter(stand.age=="3") %>% 
  lm(
    yield.cum ~ poly(cumn,1),.
  ) %>% 
  AIC()
# quadratic is better than linear for fitting the data
```

Ok, so there is an effect of cumulative N when modelled quadratically versus linear

```{r}
dat %>% 
  filter(location != "R100" | stand.age != "3") %>% 
  filter(stand.age=="3") %>% 
  filter(timing == "Control" |
           timing == "Fall" |
           timing == "Spring") %>% 
  lm(
    yield.cum ~ poly(cumn,2)*location*timing,.
  ) %>% 
  anova()
```

Now that I'm modeling quadratically, we can reject the Ho there is no relationship between nitrogen rate and yield, but we cannot reject Ho that timing doesn't matter

### mixed effect model

Here we have our fixed effect of cumulative N, timing and a random effect of block. Since we only have two sites, location is treated as a fixed effect. 

```{r}
dat %>% 
  filter(location != "R100" | stand.age != "3") %>% 
  filter(stand.age=="3") %>% 
  filter(timing == "Control" |
           timing == "Fall" |
           timing == "Spring") %>% 
  lmer(
    yield.cum ~ poly(cumn,2)*timing*location+(1|block),.
  ) %>% 
  # summary()
  # AIC()
  car::Anova()
```

The best model I can create (lowest AIC) finds a difference in cumulative yield by location, but not an effect of nrate, timing or an interaction.

```{r}
dat %>% 
  filter(location != "R100" | stand.age != "3") %>% 
  filter(stand.age=="3") %>% 
  filter(timing == "Control" |
           timing == "Fall" |
           timing == "Spring") %>% 
  ggplot(aes(cumn/3,yield.cum/3,
             col=location)) +
  geom_point() +
  geom_smooth(
    # aes(col=location),
    se=F,
    method="lm",
    formula = y~y)
```

TAKEAWAY: We applied N at differing rates and timings over 3 years at two locations. We cannot reject the Ho that the amount of N and the timing of N do not impact the cumulative yield over the 3 years. I would say our data suggests a quadratic or logarithmic relationship at around 60 kg N ha per year does not result in noticeably greater grain yields.

## Yearly performance

Now we can use our full dataset with the exception of R100 in third year. 

How does N timing and N amount correlate with yield?

```{r}
dat %>% 
  filter(location != "R100" | stand.age != "3") %>% 
  ggplot(aes(yield)) +
  stat_bin()
```

### N rate as quadratic or linear?

```{r}
dat %>% 
  filter(location != "R100" | stand.age != "3") %>% 
  ggplot(aes(n.total,yield)) +
  geom_point() +
  geom_smooth(
    se=T,
    aes(color = "loess")
  ) +
  geom_smooth(
    se=T,
    aes(color = "quadratic"),
    method = "lm",
    formula = y~poly(x,2)
  ) + 
  geom_smooth(
    se=T,
    aes(color = "linear"),
    method = "lm"
  )
```

yield response to N appears to be more quadratic than linear, improper estimation happens at very high and low n rates. let's test a quadratic vs linaer model

```{r, eval=F}
dat %>%
  filter(location != "R100" | stand.age != "3") %>%
  lmer(formula = yield ~ n.total + (1 | block), .) %>%
  summary()
# alright we can lose the block effect, it adds nothing

dat %>%
  filter(location != "R100" | stand.age != "3") %>%
  lm(formula = yield ~ n.total, .) %>%
  AIC()
  
dat %>%
  filter(location != "R100" | stand.age != "3") %>%
  lm(formula = yield ~ poly(n.total,2), .) %>%
  AIC()

# quadratic is slightly better
```

Quadratic is better!

### full model

```{r}
dat %>% 
  filter(location != "R100" | stand.age != "3") %>%
  group_by(location,year) %>%
  tally()

# We still have 9 site-years, let's model these as random and see if we see an effect of nrate

dat %>% 
  filter(location != "R100" | stand.age != "3") %>%
# removing instances where there was a Fall timing but no N was actually applied
  filter(timing !="Fall" | fall != 0) %>% 
  lmer(
    yield~poly(n.total,2)*timing*stand.age + (1|location/year/block),.
  ) %>% 
  # summary()
  car::Anova()
  emmip(.,
        timing~stand.age)

# We observe nonEst for certain emmeans because there is no data for certain factor combinations. 
  
# we know from this model that there is not an interaction, so we just simply rerun the model without the interaction term

dat %>% 
  filter(location != "R100" | stand.age != "3") %>%
  lmer(
    yield~poly(n.total,2) + timing + (1|location/year/block),.
  ) %>% 
  # car::Anova()
  emmeans(~timing) %>% 
  cld(Letters = letters, reverse=T)

```

We can reject Ho that timing has no impact. Over the sites-years, we observed




We are interested in rate timing stand.age and location as explainers, block as random


```{r}
dat %>% 
  filter(location != "R100" | stand.age != "3") %>%
  lmer(
    yield~poly(n.total,2)*timing*stand.age*location + (1|block),.
  ) %>% 
  # summary()
  car::Anova()
# this is a lot of model for a small dataset, dropping 182 columns!
# need to take out the junk and rerun a smaller model

# block explains a little

# stand.age interacts with timing, location, and nrate

```

Let's try looking at each stand.age

#### slice by stand age

```{r}
# stand age 1

dat %>% 
  filter(location != "R100" | stand.age != "3") %>% 
  filter(stand.age == "1") %>% 
  lmer(
    yield~poly(n.total,2)*timing*location + (1|block),.
  ) %>% 
  # summary()
  car::Anova()

```

interaction by nrate:location, need to separate by site

```{r}
# stand age 2

dat %>% 
  filter(location != "R100" | stand.age != "3") %>% 
  filter(stand.age == "2") %>% 
  lmer(
    yield~poly(n.total,2)*timing*location + (1|block),.
  ) %>% 
  # summary()
  car::Anova()

```

No interactions

```{r}
# stand age 3

dat %>% 
  filter(location != "R100" | stand.age != "3") %>% 
  filter(stand.age == "3") %>% 
  lmer(
    yield~poly(n.total,2)*timing*location + (1|block),.
  ) %>% 
  # summary()
  car::Anova()
```

interaction between timing:location

#### stand age 2 with no interactions

```{r}
dat %>% 
  filter(location != "R100" | stand.age != "3") %>% 
  filter(stand.age == "2") %>% 
  lmer(
    yield~poly(n.total,2)*timing*location + (1|block),.
  ) %>% 
  # summary()
  car::Anova()

# look at timing
dat %>% 
  filter(location != "R100" | stand.age != "3") %>% 
  filter(stand.age == "2") %>% 
  lmer(
    yield~timing + (1|block),.
  ) %>% 
  emmeans(~timing)

# nrate
dat %>% 
  filter(location != "R100" | stand.age != "3") %>% 
  filter(stand.age == "2") %>% 
  lmer(
    yield~poly(n.total,2) + (1|block),.
  ) %>% 
  summary()

# y=320x + -922x^2 + 558 
```


